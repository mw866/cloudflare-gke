apiVersion: v1
kind: Service
metadata:
  name: cloudflared-trailer-service
spec:
  ports:
  - port: 80
    name: http
    protocol: TCP
    targetPort: 80
  selector:
    app: cloudflared-trailer-httpbin-app
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: cloudflared-trailer-httpbin-app
  name: cloudflared-trailer-httpbin-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared-trailer-httpbin-app
  template:
    metadata:
      labels:
        app: cloudflared-trailer-httpbin-app
    spec:
      containers:
      - name: cloudflared-trailer-httpbin-container
        image: kennethreitz/httpbin
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: cloudflared-trailer-tunnel-app
  name: cloudflared-trailer-tunnel-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared-trailer-tunnel-app
  template:
    metadata:
      labels:
        app: cloudflared-trailer-tunnel-app
    spec:
      containers:    
      - name: cloudflared-trailer-tunnel-container
        image:  cloudflare/cloudflared:2020.7.1
        imagePullPolicy: IfNotPresent
        command: ["cloudflared", "tunnel"]
        args: ["--url", "$(CLOUDFLARED_TRAILER_SERVICE_SERVICE_HOST):$(CLOUDFLARED_TRAILER_SERVICE_SERVICE_PORT)", "--hostname", "cloudflared-trailer.chriswang.me", "--origincert", "/etc/cloudflared/cert.pem", "--no-autoupdate", "--lb-pool", "cloudflared-trailer"]
        volumeMounts:
        - mountPath: /etc/cloudflared
          name: cloudflared-trailer-tunnel-secret
          readOnly: true
      terminationGracePeriodSeconds: 60
      volumes:
      - name: cloudflared-trailer-tunnel-secret
        secret:
          secretName: cloudflared-cert
---